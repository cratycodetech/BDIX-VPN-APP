import 'package:flutter/material.dart';

void main() {
  runApp(const FigmaToCodeApp());
}

// Generated by: https://www.figma.com/community/plugin/842128343887142055/
class FigmaToCodeApp extends StatelessWidget {
  const FigmaToCodeApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'BDX VPN',
      debugShowCheckedModeBanner: false,
      theme: ThemeData.dark().copyWith(
        scaffoldBackgroundColor: const Color.fromARGB(255, 18, 32, 47),
      ),
      home: Scaffold(
        body: SingleChildScrollView(
          child: NormalHomeConnect(),
        ),
      ),
    );
  }
}

class NormalHomeConnect extends StatelessWidget {
  const NormalHomeConnect({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    // Responsive sizing based on screen dimensions
    final double screenWidth = MediaQuery.of(context).size.width;
    // final double screenHeight = MediaQuery.of(context).size.height; // Not used currently

    return Center(
      child: Container(
        width: screenWidth * 0.95, // 95% of screen width for responsiveness
        padding: const EdgeInsets.symmetric(vertical: 20),
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular(26),
          boxShadow: [
            BoxShadow(
              color: Colors.black.withOpacity(0.1),
              blurRadius: 10,
              offset: const Offset(0, 4),
            ),
          ],
        ),
        child: Column(
          children: [
            // Header Section
            //_buildHeader(context),

            const SizedBox(height: 20),

            // User Info Section
            _buildUserInfo(context),

            const SizedBox(height: 20),

            // Server List Card (Replaced)
            _buildServerListCard(context),
        
            const SizedBox(height: 20),

            
            // Remaining Time Card
            _buildRemainingTimeCard(context),

            const SizedBox(height: 20),

            // Disconnect Button
            _buildDisconnectButton(context),
          ],
        ),
      ),
    );
  }


  /// Builds the user information section with logo and "Go Pro" option.
  Widget _buildUserInfo(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 16.0),
      child: Row(
        children: [
          // Logo and App Name
          Row(
            children: [
              Container(
                width: 32,
                height: 32,
                decoration: BoxDecoration(
                  image: DecorationImage(
                    image: NetworkImage("https://via.placeholder.com/32x32"),
                    fit: BoxFit.fill,
                  ),
                  borderRadius: BorderRadius.circular(8),
                ),
              ),
              const SizedBox(width: 8),
              Text(
                'BDX VPN',
                style: TextStyle(
                  color: Color(0xFF393E7A),
                  fontSize: 16,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ],
          ),
          const Spacer(),
          // "Go Pro" Option
          GestureDetector(
            onTap: () {
              // Navigate to Go Pro page or show upgrade options
            },
            child: Row(
              children: [
                Text(
                  'Go Pro',
                  style: TextStyle(
                    color: Color(0xFFFEFD01),
                    fontSize: 16,
                    fontWeight: FontWeight.w500,
                  ),
                ),
                const SizedBox(width: 4),
                Icon(
                  Icons.arrow_forward,
                  color: Color(0xFFFEFD01),
                  size: 18,
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  /// Builds the Remaining Time Card with actions.
  Widget _buildRemainingTimeCard(BuildContext context) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Color(0xFFF6F6F6),
        borderRadius: BorderRadius.circular(10),
        boxShadow: [
          BoxShadow(
            color: Color(0x3F000000),
            blurRadius: 2,
            offset: Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // Remaining Time Label and Value
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Text(
                'Remaining Time',
                style: TextStyle(
                  color: Color(0xFF545454),
                  fontSize: 14,
                  fontWeight: FontWeight.w700,
                ),
              ),
              Text(
                '00:25:21',
                style: TextStyle(
                  color: Colors.black,
                  fontSize: 14,
                  fontWeight: FontWeight.w700,
                ),
              ),
            ],
          ),
          const SizedBox(height: 10),
          // Action Buttons
          Row(
            children: [
              Expanded(
                child: ElevatedButton(
                  onPressed: () {
                    // Handle "+Random Time" action
                  },
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Color(0xFFEC8304),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                    padding: const EdgeInsets.symmetric(vertical: 16),
                  ),
                  child: Text(
                    '+ Random Time',
                    style: TextStyle(
                      color: Color(0xFFFDF3E6),
                      fontSize: 12,
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                ),
              ),
              const SizedBox(width: 16),
              OutlinedButton(
                onPressed: () {
                  // Handle "Go Pro" action
                },
                style: OutlinedButton.styleFrom(
                  side: BorderSide(color: Color(0xFFEC8304)),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  padding:
                      const EdgeInsets.symmetric(vertical: 16, horizontal: 10),
                ),
                child: Row(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    Text(
                      'Go Pro',
                      style: TextStyle(
                        color: Color(0xFFEC8304),
                        fontSize: 12,
                        fontWeight: FontWeight.w400,
                      ),
                    ),
                    const SizedBox(width: 4),
                    Icon(
                      Icons.arrow_forward,
                      color: Color(0xFFEC8304),
                      size: 16,
                    ),
                  ],
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }

  /// Builds the Server List Card (Replaced with new code).
  Widget _buildServerListCard(BuildContext context) {
    // Responsive sizing based on screen width
    final double screenWidth = MediaQuery.of(context).size.width;

    return Container(
      width: screenWidth * 0.90, // Adjusted for responsiveness
      height: 100,
      padding: const EdgeInsets.symmetric(horizontal: 12),
      decoration: ShapeDecoration(
        color: Color(0xFFF6F6F6),
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(10),
        ),
        shadows: [
          BoxShadow(
            color: Color(0x3F000000),
            blurRadius: 2,
            offset: Offset(0, 2),
            spreadRadius: 0,
          )
        ],
      ),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        mainAxisAlignment: MainAxisAlignment.start,
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // Top Section: Server Info
          Container(
            width: double.infinity,
            height: 56,
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              borderRadius: BorderRadius.only(
                topLeft: Radius.circular(10),
                topRight: Radius.circular(10),
              ),
              border: Border.all(
                color: Color(0xFFDBD2D1),
                width: 1,
              ),
              boxShadow: [
                BoxShadow(
                  color: Color(0x19000000),
                  blurRadius: 10,
                  offset: Offset(0, 4),
                  spreadRadius: 0,
                )
              ],
            ),
            child: Row(
              children: [
                // Server Icon Placeholder
                Container(
                  width: 18,
                  height: 18,
                  decoration: BoxDecoration(
                    color: Color.fromARGB(255, 244, 244, 245),
                    shape: BoxShape.rectangle,
                  ),
                  child: Image.asset("assets/images/french_flag.png") 
                ),
                const SizedBox(width: 12),
                // Server Name
                Text(
                  'France',
                  style: TextStyle(
                    color: Colors.black,
                    fontSize: 14,
                    fontFamily: 'Nunito',
                    fontWeight: FontWeight.w700,
                    height: 1.0,
                  ),
                ),
                const Spacer(),
                // Ping Time
                Text(
                  '999ms',
                  style: TextStyle(
                    color: Colors.black,
                    fontSize: 10,
                    fontFamily: 'Nunito',
                    fontWeight: FontWeight.w500,
                    height: 1.6,
                  ),
                ),
              ],
            ),
          ),
          const SizedBox(height: 10),
          // Bottom Section: Data Rates
          Container(
            width: double.infinity,
            padding: const EdgeInsets.all(4),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                // Download Rate
                Row(
                  children: [
                    Text(
                      '28.5',
                      style: TextStyle(
                        color: Colors.black,
                        fontSize: 16,
                        fontFamily: 'Roboto',
                        fontWeight: FontWeight.w700,
                        height: 1.0,
                        letterSpacing: -0.32,
                      ),
                    ),
                    const SizedBox(width: 4),
                    Text(
                      'KB/S',
                      style: TextStyle(
                        color: Colors.black,
                        fontSize: 12,
                        fontFamily: 'Roboto',
                        fontWeight: FontWeight.w400,
                        height: 1.4,
                        letterSpacing: -0.24,
                      ),
                    ),
                  ],
                ),
                // Upload Rate
                Row(
                  children: [
                    Text(
                      '28.5',
                      style: TextStyle(
                        color: Colors.black,
                        fontSize: 16,
                        fontFamily: 'Roboto',
                        fontWeight: FontWeight.w700,
                        height: 1.0,
                        letterSpacing: -0.32,
                      ),
                    ),
                    const SizedBox(width: 4),
                    Text(
                      'KB/S',
                      style: TextStyle(
                        color: Colors.black,
                        fontSize: 12,
                        fontFamily: 'Roboto',
                        fontWeight: FontWeight.w400,
                        height: 1.4,
                        letterSpacing: -0.24,
                      ),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  /// Builds the Disconnect Button section.
  Widget _buildDisconnectButton(BuildContext context) {
    return Column(
      children: [
        // Disconnect Icon
        GestureDetector(
          onTap: () {
            // Handle tap to disconnect
          },
          child: Container(
            width: 60,
            height: 60,
            decoration: BoxDecoration(
              color: Color(0xFF080E59),
              shape: BoxShape.circle,
              boxShadow: [
                BoxShadow(
                  color: Colors.black.withOpacity(0.2),
                  blurRadius: 10,
                  offset: Offset(0, 5),
                ),
              ],
            ),
            child: Icon(
              Icons.power_settings_new,
              color: Colors.white,
              size: 30,
            ),
          ),
        ),
        const SizedBox(height: 10),
        // Tap to Disconnect Text
        Text(
          'Tap to Disconnect',
          style: TextStyle(
            color: Color(0xFF393E7A),
            fontSize: 24,
            fontWeight: FontWeight.bold,
            letterSpacing: -0.07,
          ),
        ),
      ],
    );
  }
}
